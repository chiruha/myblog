<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />


	<!-- Interceptor 설정 -->
	
	<interceptors>
		<interceptor>
			<mapping path="/*.do" />
			<exclude-mapping path="/login.do"/>
			<exclude-mapping path="/goMuinsert.do"/>
			<exclude-mapping path="/Muinsert.do"/>
			<exclude-mapping path="/logout.do"/>
			<exclude-mapping path="/logincheck.do"/>
			<exclude-mapping path="/test.do"/>
			<beans:bean id="LoginInterceptor" class="com.myblog.interceptor.LoginInterceptor" />
		</interceptor>
	</interceptors> 




	<!-- //////////////  Tiles 설정 (Controller 에서 리턴하는 String 값을 jsp 가 아닌 tiles 로 인식하여 tiles-def.xml 로 가도록 설정하기  //////////////-->
	<beans:bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles-definition.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- //////////////  Tiles 로 이동하는 view Resolver  //////////////-->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"></beans:property>
		<beans:property name="viewNames" value=".*"/>
		<beans:property name="order" value="1"/>
	</beans:bean>

	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<context:component-scan base-package="com.myblog" />
	
	
</beans:beans>
